// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      // 웹 설정 추가
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // 웹 설정 추가
  static FirebaseOptions get web {
    final API_KEY = dotenv.env['WEB_API_KEY'];
    if (API_KEY == null) {
      throw Exception("WEB_API_KEY 환경 변수가 설정되어 있지 않습니다.");
    }
    return FirebaseOptions(
      apiKey: API_KEY,
      appId: '1:1060332507802:web:8ce54bf3e6f82ae2a9c523',
      messagingSenderId: '1060332507802',
      projectId: 'everydaychallenge-3687b',
      authDomain: 'everydaychallenge-3687b.firebaseapp.com',
      storageBucket: 'everydaychallenge-3687b.appspot.com',
    );
  }

  static FirebaseOptions get android {
    final API_KEY = dotenv.env['ANDROID_API_KEY'];
    if (API_KEY == null) {
      throw Exception("ANDROID_API_KEY 환경 변수가 설정되어 있지 않습니다.");
    }
    return FirebaseOptions(
      apiKey: API_KEY,
      appId: '1:1060332507802:android:bba3e3301f6dbb69a9c523',
      messagingSenderId: '1060332507802',
      projectId: 'everydaychallenge-3687b',
      storageBucket: 'everydaychallenge-3687b.appspot.com',
    );
  }

  static FirebaseOptions get ios {
    final API_KEY = dotenv.env['IOS_API_KEY'];
    if (API_KEY == null) {
      throw Exception("IOS_API_KEY 환경 변수가 설정되어 있지 않습니다.");
    }
    return FirebaseOptions(
      apiKey: API_KEY,
      appId: '1:1060332507802:ios:bb95011052ad118da9c523',
      messagingSenderId: '1060332507802',
      projectId: 'everydaychallenge-3687b',
      storageBucket: 'everydaychallenge-3687b.appspot.com',
      iosBundleId: 'com.example.testFlutter',
    );
  }
}
